#!/bin/bash

# Define colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m' # No Color

# Function to print error messages
error() {
  echo -e "${RED}❌ ERROR: $1${NC}" >&2
}

# Function to print success messages
success() {
  echo -e "${GREEN}✅ $1${NC}"
}

# Check if a command exists
check_command() {
  if ! command -v "$1" &> /dev/null; then
    error "$2 command not found. Make sure $2 is installed and available in your PATH."
    exit 1
  fi
}

# Run Flutter format
run_format() {
  echo "📝 Running Flutter format..."
  dart format lib
  dart format test
  if [ $? -ne 0 ]; then
    error "Formatting failed. Please fix formatting issues before committing."
    exit 1
  fi
}

# Run Dart analysis
run_analyze() {
  echo "🔍 Running Dart analyze..."
  dart analyze
  if [ $? -ne 0 ]; then
    error "Static analysis failed. Please fix analysis issues before committing."
    exit 1
  fi
}

# Run Flutter tests
run_tests() {
  echo "🧪 Running Flutter tests..."
  flutter test
  if [ $? -ne 0 ]; then
    error "Tests failed. Please fix failing tests before committing."
    exit 1
  fi
}

# Main function to execute pre-commit checks
main() {
  hook_name="pre-push"

  if [ -f .git/hooks/${hook_name} ]; then
    if ! .git/hooks/${hook_name} "$@"; then
      error "Local ${hook_name} hook execution failed."
      exit 1
    fi
  fi

  check_command flutter Flutter
  check_command dart Dart

  run_format
  run_analyze
  run_tests

  success "All checks passed. You can proceed with the commit."
}

# Execute the main function
main "$@"
